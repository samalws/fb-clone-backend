type User {
  id: String!
  username: String!
  name: String!
  pfpLink: String!
  friends: [User!]!
  isFriendReqIn: Boolean!
  isFriendReqOut: Boolean!
  posts: [Post!]!
  replies: [Reply!]!
}

type Post {
  id: String!
  timestamp: String!
  poster: User!
  message: String!
  likes: Int!
  liked: Boolean!
  replies: [Reply!]!
}

type Reply {
  id: String!
  timestamp: String!
  poster: User!
  message: String!
  likes: Int!
  liked: Boolean!
  replyTo: Post!
}

type Query {
  myUser(tok: String!): User!
  lookupUserId(tok: String, id: String!): User
  lookupUsername(tok: String, username: String!): User
  feed(tok: String, pageNum: Int!): [Post]
  login(id: String!, pwHashPreSalt: String!): String
}

type Mutation {
  setFriendStatus(tok: String!, id: String!, val: Boolean!): Boolean! # success?
  setLike(tok: String!, id: String!, like: Boolean!): Boolean! # success?
  makePost(tok: String!, message: String!): Post
  reply(tok: String!, id: String!, message: String!): Reply
  setAcctPrivacy(tok: String!, friendOnly: Boolean!): Boolean! # success?
  setAcctPassword(tok: String!, pwHash: String!): Boolean! # success?
}
